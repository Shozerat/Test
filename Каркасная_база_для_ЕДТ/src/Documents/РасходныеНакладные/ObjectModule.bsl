
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаЗаказа = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказыКлиента") Тогда
		// Заполнение шапки
		Заказчик = ДанныеЗаполнения.Заказчик;
		СуммаЗаказа = ДанныеЗаполнения.СуммаЗаказа;
		Основание = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаСписокНоменклатуры Из ДанныеЗаполнения.СписокНоменклатуры Цикл
			НоваяСтрока = СписокНоменклатуры.Добавить();
			НоваяСтрока.Количество = ТекСтрокаСписокНоменклатуры.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаСписокНоменклатуры.Номенклатура;
			НоваяСтрока.ПроцентСкидки = ТекСтрокаСписокНоменклатуры.ПроцентСкидки;
			НоваяСтрока.Сумма = ТекСтрокаСписокНоменклатуры.Сумма;
			НоваяСтрока.Цена = ТекСтрокаСписокНоменклатуры.Цена;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Префикс = "РН" + Прав(Год(ТекущаяДата()), 2);	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходныеНакладныеСписокНоменклатуры.Номенклатура,
		|	СУММА(РасходныеНакладныеСписокНоменклатуры.Количество) КАК Количество
		|ПОМЕСТИТЬ ДанныеТЧ
		|ИЗ
		|	Документ.РасходныеНакладные.СписокНоменклатуры КАК РасходныеНакладныеСписокНоменклатуры
		|ГДЕ
		|	РасходныеНакладныеСписокНоменклатуры.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	РасходныеНакладныеСписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеТЧ.Номенклатура,
		|	ДанныеТЧ.Количество,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ДанныеТЧ.Номенклатура.Представление
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&МоментВремени, Номенклатура В
		|		(ВЫБРАТЬ
		|			ДанныеТЧ.Номенклатура КАК Номенклатура
		|		ИЗ
		|			ДанныеТЧ КАК ДанныеТЧ)) КАК ОстаткиНоменклатурыОстатки
		|		ПРАВОЕ СОЕДИНЕНИЕ ДанныеТЧ КАК ДанныеТЧ
		|		ПО ДанныеТЧ.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Количество > ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
			Сообщить(СтрШаблон("По номенклатуре %1 не хватает товара! Не хватает - %2шт.",
							ВыборкаДетальныеЗаписи.НоменклатураПредставление,
							ВыборкаДетальныеЗаписи.Количество - ВыборкаДетальныеЗаписи.КоличествоОстаток));
			Отказ = Истина;			
		Иначе
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;

КонецПроцедуры

